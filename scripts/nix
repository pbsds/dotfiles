#!/usr/bin/env bash

sudo bash -c ":" || {
    echo "sudo needed!";
    exit 1
}
test $(id -u) -eq "0" && {
    echo "cannot be run as root!"
    exit 2
}
DIR=$(git rev-parse --show-toplevel)

sudo pacman -S --noconfirm nix direnv
sudo sed -i /etc/nix/nix.conf -e 's/^# sandbox = false$/sandbox = false/'
if ! grep -q '^experimental-features = nix-command flakes$' /etc/nix/nix.conf; then
    echo "experimental-features = nix-command flakes" \
        | sudo tee --append /etc/nix/nix.conf
fi
sudo usermod -aG nix-users $(id -un)
sudo systemctl enable --now nix-daemon

# TODO: set flake registry

sg nix-users 'nix-channel --add https://nixos.org/channels/nixos-23.05 nixpkgs'
#sg nix-users 'nix-channel --add https://nixos.org/channels/nixpkgs-unstable unstable'
sg nix-users 'nix-channel --add https://github.com/guibou/nixGL/archive/main.tar.gz nixgl'
sg nix-users 'nix-channel --update nixpkgs'

sg nix-users 'nix registry pin nixpkgs          github:NixOS/nixpkgs/nixos-23.05'
sg nix-users 'nix registry pin nixpkgs-unstable github:NixOS/nixpkgs/nixpkgs-unstable'

#nix profile install github:guibou/nixGL#nixGLIntel --impure --override-input nixpkgs nixpkgs

test -s "$HOME"/.local/share/applications/nix-env \
    || ln -s "$HOME"/.nix-profile/share/applications "$HOME"/.local/share/applications/nix-env

(
    "$DIR"/scripts/symlinks/nix
)

## https://github.com/nix-community/comma/issues/1
#sg nix-users 'nix-env -i -f https://github.com/nix-community/comma/tarball/master'
